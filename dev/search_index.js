var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = ProductArrays","category":"page"},{"location":"#ProductArrays","page":"Home","title":"ProductArrays","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for ProductArrays.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [ProductArrays]","category":"page"},{"location":"#ProductArrays.productArray-Tuple","page":"Home","title":"ProductArrays.productArray","text":"productArray(vectors...)\n\nThe output is a lazy form of\n\ncollect(Iterators.product(vectors...))\n\ni.e. it is an AbstractArray in contrast to Iterators.product(vectors...). So is accessible with getindex and gets default Array implementations for free. In particular it can be passed to Base.PermutedDimsArrayfor lazy permutation andvec()to obtain a lazyBase.ReshapedArray`.\n\n\n\n\n\n","category":"method"}]
}
